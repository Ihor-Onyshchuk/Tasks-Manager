{"version":3,"sources":["components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["TodoListItem","onToggleDone","onToggleImportant","onDeleted","todoItem","done","important","id","label","classNames","className","onClick","type","TodoList","todos","otherProps","map","item","key","AppHeader","toDo","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","this","onChange","Component","buttons","name","ItemStatusFilter","handleFilter","onFilterChange","renderButtons","clazz","ItemAddForm","onLabelChange","event","onSubmit","preventDefault","onItemAdded","App","todoData","createTodoItem","filter","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","updateProperty","Date","now","toString","arr","propName","oldItem","items","length","toLowerCase","includes","visibleItems","handleSearch","doneCount","todoCount","render","document","getElementById"],"mappings":"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","file":"static/js/main.c665bcb0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./TodoListItem.scss\";\n\nconst TodoListItem = ({\n  onToggleDone,\n  onToggleImportant,\n  onDeleted,\n  todoItem: { done, important, id, label }\n}) => {\n  let classNames = \"todo-list-item\";\n  if (done) classNames += \" done\";\n  if (important) classNames += \" important\";\n\n  return (\n    <li className=\"list-group-item\">\n      <span className={classNames}>\n        <span className=\"todo-list-item-label\" onClick={() => onToggleDone(id)}>\n          {label}\n        </span>\n\n        <button\n          type=\"button\"\n          onClick={() => onToggleImportant(id)}\n          className=\"btn btn-outline-success btn-sm float-right\"\n        >\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => onDeleted(id)}\n          className=\"btn btn-outline-danger btn-sm float-right\"\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    </li>\n  );\n};\n\nexport default TodoListItem;\n","import React from \"react\";\nimport \"./TodoList.scss\";\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\n\nconst TodoList = ({ todos, ...otherProps }) => (\n  <ul className=\"list-group todo-list\">\n    {todos.map(item => (\n      <TodoListItem key={item.id} todoItem={item} {...otherProps} />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./AppHeader.scss\";\n\nconst AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>\n        {toDo} more to do, {done} done\n      </h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React, { Component } from \"react\";\nimport \"./SearchPanel.scss\";\n\nexport default class SearchPanel extends Component {\n  state = {\n    term: \"\"\n  };\n\n  onSearchChange = e => {\n    const term = e.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term);\n  };\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        value={this.state.term}\n        onChange={this.onSearchChange}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./ItemStatusFilter.scss\";\n\nconst buttons = [\n  { name: \"all\", label: \"All\" },\n  { name: \"active\", label: \"Active\" },\n  { name: \"done\", label: \"Done\" }\n];\n\nexport default class ItemStatusFilter extends Component {\n  render() {\n    const { handleFilter, onFilterChange } = this.props;\n\n    const renderButtons = buttons.map(({ name, label }) => {\n      const isActive = handleFilter === name;\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\n\n      return (\n        <button\n          key={name}\n          type=\"button\"\n          className={`btn ${clazz}`}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n    return <div className=\"btn-group\">{renderButtons}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./ItemAddForm.scss\";\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: \"\"\n  };\n  onLabelChange = event => {\n    this.setState({\n      label: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"What needs to be done\"\n            onChange={this.onLabelChange}\n            value={this.state.label}\n          />\n          <button type=\"submit\" className=\"btn btn-outline-secondary\">\n            Add Item\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TodoList from \"../TodoList/TodoList\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\nimport \"./App.scss\";\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\n\nconst uuid = () => `uuid${Date.now().toString(16)}`;\n\nexport default class App extends Component {\n  state = {\n    todoData: [this.createTodoItem(\"Drink Coffee\")],\n    term: \"\",\n    filter: \"all\" // all, active, done\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: uuid()\n    };\n  }\n\n  deleteItem = id => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex(el => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\n      return {\n        todoData: newArray\n      };\n    });\n  };\n\n  addItem = text => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArray = [...todoData, newItem];\n\n      return {\n        todoData: newArray\n      };\n    });\n  };\n\n  updateProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n\n    // 1. update obj\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    // 2. construct new array\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  onToggleImportant = id => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.updateProperty(todoData, id, \"important\")\n      };\n    });\n  };\n\n  onToggleDone = id => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.updateProperty(todoData, id, \"done\")\n      };\n    });\n  };\n\n  onSearchChange = term => {\n    this.setState({ term });\n  };\n\n  handleSearch(items, term) {\n    if (term.length === 0) return items;\n    return items.filter(item =>\n      item.label.toLowerCase().includes(term.toLowerCase())\n    );\n  }\n\n  handleFilter(items, filter) {\n    switch (filter) {\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter(item => !item.done);\n      case \"done\":\n        return items.filter(item => item.done);\n      default:\n        return items;\n    }\n  }\n\n  onFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const { todoData, term, filter } = this.state;\n\n    const visibleItems = this.handleFilter(\n      this.handleSearch(todoData, term),\n      filter\n    );\n\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onSearchChange={this.onSearchChange} />\n\n          <ItemStatusFilter\n            onFilterChange={this.onFilterChange}\n            handleFilter={filter}\n          />\n        </div>\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleDone={this.onToggleDone}\n          onToggleImportant={this.onToggleImportant}\n        />\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}